class Solution {
    public List<String> generateParenthesis(int n) {
        List<String> output = new ArrayList();
        backtrack(output, "", 0, 0, n);
        return output;
    }
    public void backtrack(List<String> output, String current_string, int open, int close, int max){
        if(current_string.length() == max*2){
            output.add(current_string);
            return;
        }
        if(open < max) backtrack(output, current_string + "(", open+1, close, max);
        if(close < open) backtrack(output, current_string + ")", open, close+1, max);
    }
}